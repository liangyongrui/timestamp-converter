{"version":3,"sources":["utils.ts","Suggest.tsx","Storage.tsx","App.tsx","model.ts","serviceWorker.ts","index.tsx"],"names":["copy","e","x","prefix","currentTarget","select","copyDOM","document","querySelector","window","getSelection","removeAllRanges","range","createRange","selectNode","addRange","console","log","execCommand","notification","message","getSuggestItems","text","res","raw","dayjs","value","split","filter","t","now","length","s","year","d","isNaN","valueOf","push","startOf","rawUt","parseInt","todayStart","todayEnd","endOf","thisMonthStart","map","date","columns","title","dataIndex","key","render","trim","replaceAll","onClick","className","bordered","readOnly","action","all","size","type","href","Suggest","suggests","save","data","dateTime","format","style","width","dataSource","pagination","top","remove","Storage","storageItems","storageKey","App","useState","inputValue","setInputValue","setStorageItems","suggestItems","setSuggestItems","n","set","Set","arr","add","forEach","tt","has","newSetArray","useEffect","a","json","localStorage","getItem","JSON","parse","items","setItem","stringify","placeholder","onChange","splice","findIndex","removeThenNewSetArray","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1f2d30e2.chunk.js","sourcesContent":["import Item from \"./model\";\nimport { notification } from \"antd\";\n\nexport function removeThenNewSetArray(x: Item[], n: Item) {\n  const arr = [...x];\n  arr.splice(\n    arr.findIndex((t) => t.date.valueOf() === n.date.valueOf()),\n    1\n  );\n  return arr;\n}\n\nexport function newSetArray(x: Item[], n: Item) {\n  const set = new Set<number>();\n  const arr = [n];\n  set.add(n.date.valueOf());\n  x.forEach((t) => {\n    const tt = t.date.valueOf();\n    if (!set.has(tt)) {\n      set.add(tt);\n      arr.push(t);\n    }\n  });\n  return arr;\n}\n\nexport function copy(\n  e: React.MouseEvent<HTMLInputElement, MouseEvent>,\n  x: number | string,\n  prefix: string\n) {\n  e.currentTarget.select();\n  var copyDOM = document.querySelector(\".\" + prefix + x);\n  if (copyDOM === null) {\n    notification[\"error\"]({\n      message: \"复制失败，请手动复制！\",\n    });\n    return;\n  }\n  window.getSelection()?.removeAllRanges(); //清楚页面中已有的selection\n  var range = document.createRange(); //创建一个range\n  range.selectNode(copyDOM); // 选中需要复制的节点\n  window.getSelection()?.addRange(range); // 执行选中元素\n  console.log(range, copyDOM);\n  var successful = document.execCommand(\"copy\"); // 执行 copy 操作\n  if (successful) {\n    notification[\"success\"]({\n      message: \"复制成功\",\n    });\n  } else {\n    notification[\"error\"]({\n      message: \"复制失败，请手动复制！\",\n    });\n  }\n}\n","import \"./App.less\";\nimport React from \"react\";\nimport { Table, Space, Button, Input } from \"antd\";\nimport Item from \"./model\";\nimport { copy } from \"./utils\";\nimport dayjs from \"dayjs\";\n\n/**\n * 获取建议日期\n */\nexport function getSuggestItems(text: string) {\n  const res = [];\n\n  const raw = dayjs(text);\n  const value = text.split(\"\").filter((t) => t >= \"0\" && t <= \"9\");\n  const now = dayjs();\n  if (value.length === 4) {\n    // 月 日\n    const s =\n      now.year() + \"-\" + value[0] + value[1] + \"-\" + value[2] + value[3];\n    const d = dayjs(s);\n    if (!isNaN(d.valueOf())) {\n      res.push(d.startOf(\"day\"));\n    }\n  }\n  if (isNaN(raw.valueOf()) || raw.valueOf() < 0) {\n    const value = text.split(\"\").filter((t) => t >= \"0\" && t <= \"9\");\n    if (value.length === 6) {\n      // 年月\n      const d = dayjs(\n        value[0] + value[1] + value[2] + value[3] + \"-\" + value[4] + value[5]\n      );\n      if (!isNaN(d.valueOf())) {\n        res.push(d.startOf(\"day\"));\n      }\n    }\n    if (value.length === 8) {\n      // 年月日\n      const s =\n        value[0] +\n        value[1] +\n        value[2] +\n        value[3] +\n        \"-\" +\n        value[4] +\n        value[5] +\n        \"-\" +\n        value[6] +\n        value[7];\n      const d = dayjs(s);\n      if (!isNaN(d.valueOf())) {\n        res.push(d.startOf(\"day\"));\n      }\n    }\n    if (value.length === 9) {\n      // 年 月 日 小时\n      const s =\n        value[0] +\n        value[1] +\n        value[2] +\n        value[3] +\n        \"-\" +\n        value[4] +\n        value[5] +\n        \"-\" +\n        value[6] +\n        value[7] +\n        \" 0\" +\n        value[8] +\n        \":00\";\n      const d = dayjs(s);\n      if (!isNaN(d.valueOf())) {\n        res.push(d);\n      }\n    }\n    if (value.length === 10) {\n      // 年 月 日 小时\n      const s =\n        value[0] +\n        value[1] +\n        value[2] +\n        value[3] +\n        \"-\" +\n        value[4] +\n        value[5] +\n        \"-\" +\n        value[6] +\n        value[7] +\n        \" \" +\n        value[8] +\n        value[9] +\n        \":00\";\n      const d = dayjs(s);\n      if (!isNaN(d.valueOf())) {\n        res.push(d);\n      }\n    }\n    if (value.length === 11) {\n      // 年 月 日 小时\n      const s =\n        value[0] +\n        value[1] +\n        value[2] +\n        value[3] +\n        \"-\" +\n        value[4] +\n        value[5] +\n        \"-\" +\n        value[6] +\n        value[7] +\n        \" \" +\n        value[8] +\n        value[9] +\n        \":0\" +\n        value[10];\n      const d = dayjs(s);\n      if (!isNaN(d.valueOf())) {\n        res.push(d);\n      }\n    }\n    if (value.length === 12) {\n      // 年 月 日 小时\n      const s =\n        value[0] +\n        value[1] +\n        value[2] +\n        value[3] +\n        \"-\" +\n        value[4] +\n        value[5] +\n        \"-\" +\n        value[6] +\n        value[7] +\n        \" \" +\n        value[8] +\n        value[9] +\n        \":\" +\n        value[10] +\n        value[11];\n      const d = dayjs(s);\n      if (!isNaN(d.valueOf())) {\n        res.push(d);\n      }\n    }\n  } else {\n    res.push(raw);\n  }\n  const rawUt = dayjs(parseInt(text));\n  if (!isNaN(rawUt.valueOf())) {\n    res.push(rawUt);\n  }\n  // 今天开始\n  const todayStart = dayjs().startOf(\"day\");\n  res.push(todayStart);\n\n  // 今天结束\n  const todayEnd = dayjs().endOf(\"day\");\n  res.push(todayEnd);\n\n  // 本月开始\n  const thisMonthStart = dayjs().startOf(\"month\");\n  res.push(thisMonthStart);\n\n  // 本月结束\n  res.push(dayjs().endOf(\"month\"));\n\n  // now\n  res.push(dayjs());\n\n  return res.map((t) => ({\n    date: t,\n  }));\n}\nconst prefix = \"suggest\";\nconst columns = [\n  {\n    title: \"日期时间\",\n    dataIndex: \"dateTime\",\n    key: \"dateTime\",\n    render: (text: string) => {\n      const trim = text\n        .replaceAll(\" \", \"\")\n        .replaceAll(\":\", \"\")\n        .replaceAll(\"/\", \"\");\n      return (\n        <Input\n          onClick={(e) => copy(e, trim, prefix)}\n          className={`${prefix}${trim}`}\n          bordered={false}\n          value={text}\n          readOnly\n        />\n      );\n    },\n  },\n  {\n    title: \"时间戳\",\n    dataIndex: \"key\",\n    key: \"key\",\n    render: (text: number) => (\n      <Input\n        onClick={(e) => copy(e, text, prefix)}\n        className={`${prefix}${text}`}\n        bordered={false}\n        value={text}\n        readOnly\n      />\n    ),\n  },\n  {\n    title: \"Action\",\n    dataIndex: \"action\",\n    key: \"action\",\n    render: (action: (n: number) => void, all: any) => {\n      return (\n        <Space size=\"middle\">\n          <Button type=\"link\" href=\"#\" onClick={() => action(all.key)}>\n            保存\n          </Button>\n        </Space>\n      );\n    },\n  },\n];\n\nexport default function Suggest({\n  suggests,\n  save,\n}: {\n  suggests: Item[];\n  save: (n: number) => void;\n}) {\n  const data = suggests\n    .map((t) => t.date)\n    .map((t) => ({\n      key: t.valueOf(),\n      dateTime: t.format(\"YYYY-MM-DD HH:mm:ss\"),\n      action: save,\n    }));\n  return (\n    <Table\n      style={{ width: \"1000px\" }}\n      columns={columns as any}\n      dataSource={data}\n      pagination={false}\n    />\n  );\n}\n","import \"./App.less\";\nimport React from \"react\";\nimport { Table, Space, Button, Input } from \"antd\";\nimport Item from \"./model\";\nimport { copy } from \"./utils\";\n\nconst prefix = \"storage\";\n\nconst columns = [\n  {\n    title: \"日期时间\",\n    dataIndex: \"dateTime\",\n    key: \"dateTime\",\n    render: (text: string) => {\n      const trim = text\n        .replaceAll(\" \", \"\")\n        .replaceAll(\":\", \"\")\n        .replaceAll(\"/\", \"\");\n      return (\n        <Input\n          onClick={(e) => copy(e, trim, prefix)}\n          className={`${prefix}${trim}`}\n          bordered={false}\n          value={text}\n          readOnly\n        />\n      );\n    },\n  },\n  {\n    title: \"时间戳\",\n    dataIndex: \"key\",\n    key: \"key\",\n    render: (text: number) => (\n      <Input\n        onClick={(e) => copy(e, text, prefix)}\n        className={`${prefix}${text}`}\n        bordered={false}\n        value={text}\n        readOnly\n      />\n    ),\n  },\n  {\n    title: \"Action\",\n    key: \"action\",\n    dataIndex: \"action\",\n    render: (\n      {\n        top,\n        remove,\n      }: { top: (n: number) => void; remove: (n: number) => void },\n      all: any\n    ) => (\n      <Space size=\"middle\">\n        <Button type=\"link\" onClick={() => top(all.key)}>\n          置顶\n        </Button>\n        <Button type=\"link\" onClick={() => remove(all.key)}>\n          删除\n        </Button>\n      </Space>\n    ),\n  },\n];\n\nfunction Storage({\n  storageItems,\n  top,\n  remove,\n}: {\n  storageItems: Item[];\n  top: (n: number) => void;\n  remove: (n: number) => void;\n}) {\n  const data = storageItems\n    .map((t) => t.date)\n    .map((t) => ({\n      key: t.valueOf(),\n      dateTime: t.format(\"YYYY-MM-DD HH:mm:ss\"),\n      action: { top, remove },\n    }));\n  return (\n    <Table\n      style={{ width: \"1000px\" }}\n      columns={columns as any}\n      dataSource={data}\n      pagination={false}\n    />\n  );\n}\n\nexport default Storage;\n","import \"./App.less\";\nimport React, { useState, useEffect } from \"react\";\nimport { Divider, Input } from \"antd\";\nimport Item, { parseItems, stringifyItems } from \"./model\";\nimport Suggest, { getSuggestItems } from \"./Suggest\";\nimport UtStorage from \"./Storage\";\nimport { newSetArray, removeThenNewSetArray } from \"./utils\";\nimport dayjs from \"dayjs\";\n\nconst storageKey = \"the_world's_best_time-stamp_conversion_website_key\";\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  /// 浏览器（将要）储存的数据\n  const [storageItems, setStorageItems] = useState<Item[]>([]);\n  /// 建议需要给出的数据\n  const [suggestItems, setSuggestItems] = useState<Item[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      setSuggestItems(getSuggestItems(inputValue));\n    })();\n  }, [inputValue]);\n\n  useEffect(() => {\n    setStorageItems(parseItems(localStorage.getItem(storageKey) ?? \"[]\"));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(storageKey, stringifyItems(storageItems));\n  }, [storageItems]);\n\n  function save(n: number) {\n    setStorageItems((x) => {\n      return newSetArray(x, { date: dayjs(n) });\n    });\n  }\n\n  function remove(n: number) {\n    setStorageItems((x) => {\n      return removeThenNewSetArray(x, { date: dayjs(n) });\n    });\n  }\n  return (\n    <div className=\"App\">\n      <p>这有可能是世界上最好用的 时间戳 转换网站</p>\n      <Divider />\n      <Input\n        size=\"large\"\n        style={{ width: \"1000px\" }}\n        placeholder=\"在这输入你想要输入的内容，无需拘泥于格式\"\n        bordered={false}\n        value={inputValue}\n        onChange={(e) => setInputValue(e.currentTarget.value)}\n      />\n      <Divider />\n      <p>猜你想要</p>\n      <Suggest save={save} suggests={suggestItems} />\n      <Divider />\n      <p>Storage</p>\n      <UtStorage top={save} remove={remove} storageItems={storageItems} />\n    </div>\n  );\n}\n\nexport default App;\n","import dayjs, { Dayjs } from \"dayjs\";\n\ninterface Item {\n  date: Dayjs;\n}\n\nexport function stringifyItems(items: Item[]) {\n  return JSON.stringify(items.map((t) => t.date.valueOf()));\n}\n\nexport function parseItems(json: string) {\n  return (JSON.parse(json) as number[]).map((t) => ({\n    date: dayjs(t),\n  }));\n}\nexport default Item;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}